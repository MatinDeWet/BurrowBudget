services:
    database:
        container_name: database
        environment:
            - POSTGRES_USER=postgres
            - POSTGRES_PASSWORD=postgres
        restart: unless-stopped
        ports:
            - "5432:5432"
        volumes:
            - database_data:/var/lib/postgresql/data/ 

    minio:
        container_name: minio
        command: server /data --console-address ":9001"
        environment:
            - MINIO_ROOT_USER=minioadmin
            - MINIO_ROOT_PASSWORD=minioadmin
            - MINIO_DOMAIN=localhost
        restart: unless-stopped
        ports:
            - "9000:9000"   # MinIO API
            - "9001:9001"   # MinIO Console
        volumes:
            - minio_data:/data
        healthcheck:
            test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
            interval: 30s
            timeout: 20s
            retries: 3

    rabbitmq:
        container_name: rabbitmq
        environment:
            - RABBITMQ_DEFAULT_USER=guest
            - RABBITMQ_DEFAULT_PASS=guest
        restart: unless-stopped
        ports:
            - "5672:5672"   # AMQP port
            - "15672:15672" # Management UI

    webapi.presentation:
        container_name: webapi-presentation
        environment:
            - ASPNETCORE_ENVIRONMENT=Development
            - ASPNETCORE_HTTP_PORTS=8080
        ports:
          - "5001:8080"
          - "6001:8081"
        depends_on:
          - database
          - minio
          - rabbitmq

    runner.presentation:
        container_name: runner-presentation
        environment:
            - DOTNET_ENVIRONMENT=Development
        depends_on:
          - database
          - minio
          - rabbitmq
